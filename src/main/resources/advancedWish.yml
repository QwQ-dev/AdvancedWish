# 缓存说明:
#  注意，您不应该以任何方式去自行更改玩家缓存文件内的任何信息
#  您的每一次更改都是在破坏某个玩家的缓存信息，您不应该以任何方式去更改缓存文件内的任何信息
#
# 关于自动重载:
#  此文件的路径，数据库设置，数据转换等等部分不支持自动重载
#  其他文件均支持自动重载，您应该避免使用第三方插件进行热重载
#  请不要使用第三方插件进行热重载，而是使用指令 (玩家 -> aw reload / 控制台 -> awc reload)
#
# 更新注意:
#  0.0.5-SNAPSHOT 版本后将不再启用 Redis 数据库来进行跨服抽奖，我们将使用缓存来完成这一切，这会很好地代替它

####################################################
#################### 配置文件版本 ####################
####################################################

# 配置版本 请不要擅自更改，插件将在启动时检查配置文件版本，并告诉您您是否应该重新生成来防止错误
CONFIG-VERSION: 69

####################################################
##################### 许愿池注册 #####################
####################################################

# 注册的许愿池
WISH:
  - "基础许愿池"

####################################################
##################### 数据库设置 #####################
####################################################

# 数据存储类型
#  默认使用 Json，可选有 Json、MongoDB、MySQL (大小写不敏感)
#
# 数据转移写法
#   Advanced Wish 支持您将一个方式存储的数据转换为另一个方式，进行数据迁移。
#   需要注意的是，迁移完成后会进行提示并且关闭服务器，不会删除原有的数据，您需要切换数据迁移写法为普通的数据存储类型。
#   如果是两个数据库的迁移，请确保两个数据库都正常开启且可以进行连接。
#   写法: "原存储类型:新存储类型" - 将原存储类型的所有数据迁移至新存储类型。
DATA-STORAGE-TYPE: "JSON"

# Mongo 数据库设置
#  若开启则会将玩家的数据与日志存储至 Mongo 数据库
#  若关闭则会以 Json 的形式存储，Json 的存放路径可以在 GUARANTEED-PATH / LOGS-PATH 进行更改
#  我们支持将 Json 数据迁移至 Mongo 数据库，请查看 TRANSFORMATION-JSON-TO-MONGO 选项
MONGO:
  IP: 127.0.0.1
  PORT: 27017

  # 使用用户名或密码 (若没有设置用户密码则两个都不填写)
  AUTH:
    USER: ""
    PASSWORD: ""

  # 自定义 Mongo 连接 URL
  #  如果启用则需要自己写连接 URL，上面的指定内容全部作废，AdvancedWish 数据库名: AdvancedWish
  #  实例: mongodb://USER:PWD@IP:PORT/AdvancedWish - 使用用户密码登陆指定服务器的 AdvancedWish 数据库
  CUSTOM-URL: ""

# MySQL 数据库设置
MYSQL:
  # MySQL5 使用: com.mysql.jdbc.Driver
  # MySQL8 使用: com.mysql.cj.jdbc.Driver
  DRIVER: "com.mysql.cj.jdbc.Driver"

  IP: 127.0.0.1
  PORT: 3306

  # 使用用户名或密码 (若没有设置用户密码则两个都不填写)
  AUTH:
    USER: ""
    PASSWORD: ""

  # 自定义 MySQL 连接 URL
  CUSTOM-URL: ""

####################################################
#################### 自动更新设置 ####################
####################################################

# 自动检查是否具有新版本
UPDATE-CHECKER: true

# 检查周期，当自动更新开启后多少分钟进行一次检查
CHECK-CYCLE: 60

####################################################
##################### 权限设置 ######################
####################################################

# 管理员指令权限
ADMIN-PERM: "aw.admin"

####################################################
#################### 存放路径设置 ####################
####################################################

# 默认脚本存放路径
#  默认脚本的存放路径，有关 scriptSetup / onDisable 函数的脚本
#  会在此路径寻找并且解析，若需要使用执行其他路径下的 js 脚本指定函数则请使用 ScriptUtils.invokeFunctionInAllScripts 方法
#  若您不使用 js 脚本则可以不用更改此选项，默认在服务端插件文件夹下的 /Scripts 文件夹内
SCRIPT-PATH: ""

# 增率 (保底率) 存放路径 (Json)
#  如果您想要保底率进行跨服，并且不使用数据库，那么只需要将子服的所有此路径全部填写为一样的即可
#  如果不进行填写那么默认在服务端插件文件夹下的 /PlayerGuaranteed 文件夹内
GUARANTEED-PATH: ""

# 玩家日志存放路径 (Json)
#  如果您想要日志进行跨服，并且不使用数据库，那么只需要将子服的所有此路径全部填写为一样的即可
#  如果不进行填写那么默认在服务端插件文件夹下的 /PlayerLogs 文件夹内
LOGS-PATH: ""

# 玩家缓存文件存放路径 (Json)
#  此路径下将存储部分玩家缓存信息，这将代替 Redis 来更好地完成跨服抽奖，无论是否使用数据库，缓存都只会以 Json 文件形式存储
#  如果您想要实现跨服抽奖，那么只需要将子服的所有此路径全部填写为一样的即可
#  如果您只是单端使用，或不想进行跨服，那么您完全没必要更改它，需要注意的是，您绝对不能够手动编辑这里的文件
#  如果不进行填写那么默认在服务端插件文件夹下的 /PlayerCache 文件夹内
DO-LIST-CACHE-PATH: ""

# 其余数据存放路径 (Json)
#  如果您需要跨服数据同步，并且不使用数据库，那么只需要将子服的所有此路径全部填写为一样的即可
#  此路径下将会存储使用 method 语句或使用其他方法直接操作数据库 (Json) 时的数据存储位置，通常是自定义完成的
#  如果不进行填写那么默认在服务端插件文件夹下的 /OtherData 文件夹内
OTHER-DATA-PATH: ""

####################################################
#################### bStats 设置 ####################
####################################################

# bStats 将统计此插件的使用信息，不会收集隐私信息，请放心开启
# bStats: https://bstats.org/plugin/bukkit/AdvancedWish/16990
BSTATS: true

####################################################
#################### 特殊情况设置 ####################
####################################################

# 这里将设置特殊情况时取消玩家进入服务器
CANCEL-LOGIN-REASONS:
  # 当服务器正在保存玩家缓存时玩家进入服务器，我们将取消此次进入
  SAVING-CACHE: "&c服务器正在处理您的缓存，请稍等几秒后进入!"

  # 当服务器正在处理玩家的缓存时，有另一名相同的玩家进入了服务器，尽管这是不应该发生的，以防万一
  LOADING-CACHE: "&a一个相同的玩家已经进入此服务器，这不应该发生!"

  # 当服务器延迟处理玩家缓存后，玩家在等待途中离线，在延迟未结束时又尝试加入
  WAITING-LOADING-CACHE: "&c服务器正在等待处理您的缓存，请等待一会后进入!"

####################################################
##################### 缓存设置 ######################
####################################################

# 玩家进入多久之后开始加载玩家数据
# 如果您自定义了玩家缓存文件存放路径，那么这个值应该全部相同，并且这个值不应该小于 2s
# 如果这个值过小，会导致还未存储玩家缓存完毕便进行加载，会加载到空的缓存，如果过大，那么玩家需要等待非常久才会加载，我推荐 5s
# 如果您的服务器开始就拥有其他标题效果发送，那么您也可以增高这个值，使得 Advanced Wish 的标题发送靠后，更加美观
WAIT-LOADING: 5 # 单位秒 - 不可小数 - 不支持算数

####################################################
##################### 指令设置 ######################
####################################################

# 是的，您甚至可以自定义 Advanced Wish 的指令

# 指令主名
COMMAND-NAME: "advancedwish"

# 指令别名
ALIASES:
  - "aw"

# 指令描述
DESCRIPTION: "Advanced Wish 默认命令。"

####################################################
##################### 重载设置 ######################
####################################################

# 是否重新开始许愿限制任务
#  注意: 如果此处为 false，那么除非更改此项，否则许愿限制任务永远不会刷新
WISH-LIMIT-TASK-RESTART: true